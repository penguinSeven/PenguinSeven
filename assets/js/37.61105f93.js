(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{406:function(a,t,s){"use strict";s.r(t);var e=s(25),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"git-版本库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-版本库"}},[a._v("#")]),a._v(" Git 版本库")]),a._v(" "),t("h2",{attrs:{id:"常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[a._v("#")]),a._v(" 常用命令")]),a._v(" "),t("h3",{attrs:{id:"_0-初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_0-初始化"}},[a._v("#")]),a._v(" 0. 初始化")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v(' # 创建项目 \n mkdir paperless\n cd paperless\n git init\n echo "# paperless" >> README.md\n git add README.md\n git commit -m "first commit"\n git remote add origin https://git.coding.net/penguinseven/paperless.git\n git push -u origin master\n \n ## 已有项目\n git remote add origin https://git.coding.net/penguinseven/paperless.git\n git push -u origin master\n')])])]),t("h3",{attrs:{id:"_1-保存用户名-密码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-保存用户名-密码"}},[a._v("#")]),a._v(" 1.  保存用户名，密码")]),a._v(" "),t("p",[a._v("每次操作都需要输入用户名和密码感觉很繁琐，解决方法，在本地的工程文件夹的.git下打开config文件\n添加：(再输入一次用户名密码后就可以保存住了。)")]),a._v(" "),t("div",{staticClass:"language-cmd extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("    [credential]\n         helper = store\n")])])]),t("h3",{attrs:{id:"_2-修改git-源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-修改git-源"}},[a._v("#")]),a._v(" 2. 修改git 源")]),a._v(" "),t("div",{staticClass:"language-cmd extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("git remote set-url origin/master http://xxx\n")])])]),t("h3",{attrs:{id:"_3-tag标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-tag标签"}},[a._v("#")]),a._v(" 3.tag标签")]),a._v(" "),t("blockquote",[t("p",[a._v("Git 中的tag指向一次commit的id，通常用来给开发分支做一个标记，如标记一个版本号。")])]),a._v(" "),t("h3",{attrs:{id:"_1-打标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-打标签"}},[a._v("#")]),a._v(" 1. 打标签")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v('git tag -a v1.01 -m "Relase version 1.01"\n')])])]),t("blockquote",[t("p",[a._v("注解：git tag 是打标签的命令，-a 是添加标签，其后要跟新标签号，-m 及后面的字符串是对该标签的注释。")])]),a._v(" "),t("h3",{attrs:{id:"_2-提交标签到远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-提交标签到远程仓库"}},[a._v("#")]),a._v(" 2. 提交标签到远程仓库")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("git push origin -tags\n")])])]),t("blockquote",[t("p",[a._v("注解：就像git push origin master 把本地修改提交到远程仓库一样，-tags可以把本地的打的标签全部提交到远程仓库。")])]),a._v(" "),t("h3",{attrs:{id:"_3-删除标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-删除标签"}},[a._v("#")]),a._v(" 3. 删除标签")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("git tag -d v1.01\n")])])]),t("blockquote",[t("p",[a._v("注解：-d 表示删除，后面跟要删除的tag名字")])]),a._v(" "),t("h3",{attrs:{id:"_4-删除远程标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-删除远程标签"}},[a._v("#")]),a._v(" 4. 删除远程标签")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("git push origin :refs/tags/v1.01\n")])])]),t("blockquote",[t("p",[a._v("注解：就像git push origin :branch_1 可以删除远程仓库的分支branch_1一样， 冒号前为空表示删除远程仓库的tag。")])]),a._v(" "),t("h3",{attrs:{id:"_5-查看标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-查看标签"}},[a._v("#")]),a._v(" 5. 查看标签")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("git tag\n# 或者  \ngit tag -l\n")])])]),t("h3",{attrs:{id:"_6-remote"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-remote"}},[a._v("#")]),a._v(" 6.remote")]),a._v(" "),t("blockquote",[t("p",[a._v("可以通过-all一次提交多个仓库")])]),a._v(" "),t("ul",[t("li",[a._v("配置远程仓库")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" origin https://url\n")])])]),t("ul",[t("li",[a._v("再添加一个远程仓库")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote set-url "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--add")]),a._v(" origin https://url\n")])])]),t("ul",[t("li",[a._v("注意这里多次添加需要用")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote set-url "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--add")]),a._v("\n")])])]),t("ul",[t("li",[a._v("不然会报错：")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("fatal: remote origin already exists.\n")])])]),t("ul",[t("li",[a._v("或者改名")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" otherOrigin https://url\n")])])]),t("ul",[t("li",[a._v("一次提交到所有远程仓库")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--all")]),a._v("\n")])])]),t("blockquote",[t("p",[a._v("注意")])]),a._v(" "),t("p",[t("code",[a._v("git pull")]),a._v(" 是 "),t("code",[a._v("git pull")]),a._v(" ("),t("strong",[a._v("from")]),a._v(") "),t("code",[a._v("origin")]),a._v(" ("),t("strong",[a._v("to")]),a._v(") "),t("code",[a._v("master")])]),a._v(" "),t("p",[t("code",[a._v("git push")]),a._v(" 是 "),t("code",[a._v("git push")]),a._v(" ("),t("strong",[a._v("to")]),a._v(") "),t("code",[a._v("origin")]),a._v(" ("),t("strong",[a._v("from")]),a._v(") "),t("code",[a._v("master")])]),a._v(" "),t("h3",{attrs:{id:"_7-撤销commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-撤销commit"}},[a._v("#")]),a._v(" 7. 撤销"),t("code",[a._v("commit")])]),a._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/w958796636/article/details/53611133",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language-git extra-class"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[t("span",{pre:!0,attrs:{class:"token command"}},[a._v("$ git reset"),t("span",{pre:!0,attrs:{class:"token parameter"}},[a._v(" --soft")]),a._v(" HEAD^")]),a._v("\n")])])]),t("p",[t("code",[a._v("HEAD^")]),a._v("的意思是上一个版本，也可以写成"),t("code",[a._v("HEAD~1")])]),a._v(" "),t("p",[a._v("如果你进行了2次"),t("code",[a._v("commit")]),a._v("，想都撤回，可以使用"),t("code",[a._v("HEAD~2")])]),a._v(" "),t("p",[a._v("至于这几个参数：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("--mixed"),t("br"),a._v("\n意思是：不删除工作空间改动代码，撤销"),t("code",[a._v("commit")]),a._v("，并且撤销"),t("code",[a._v("git add .")]),a._v("操作\n这个为默认参数,"),t("code",[a._v("git reset --mixed HEAD^")]),a._v(" 和 "),t("code",[a._v("git reset HEAD^")]),a._v(" 效果是一样的。")])]),a._v(" "),t("li",[t("p",[a._v("--soft"),t("br"),a._v("\n不删除工作空间改动代码，撤销"),t("code",[a._v("commit")]),a._v("，不撤销"),t("code",[a._v("git add .")])])]),a._v(" "),t("li",[t("p",[a._v("--hard"),t("br"),a._v("\n删除工作空间改动代码，撤销"),t("code",[a._v("commit")]),a._v("，撤销"),t("code",[a._v("git add .")]),a._v("\n注意完成这个操作后，就恢复到了上一次的commit状态。")])])]),a._v(" "),t("p",[a._v("顺便说一下，如果"),t("code",[a._v("commit")]),a._v("注释写错了，只是想改一下注释，只需要：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--amend")]),a._v("\n")])])]),t("p",[a._v("此时会进入默认"),t("code",[a._v("vim")]),a._v("编辑器，修改注释完毕后保存就好了。")]),a._v(" "),t("h3",{attrs:{id:"_8-清除git-clean"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-清除git-clean"}},[a._v("#")]),a._v(" 8. 清除"),t("code",[a._v("git clean")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v("\n")])])]),t("p",[a._v("是一次clean的演习, 告诉你哪些文件会被删除. 记住他不会真正的删除文件, 只是一个提醒")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v("　　\n")])])]),t("p",[a._v("删除当前目录下所有没有track过的文件. 他不会删除.gitignore文件里面指定的文件夹和文件, 不管这些文件有没有被track过")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("path"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("p",[a._v("删除指定路径下的没有被track过的文件")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-df")]),a._v("\n")])])]),t("p",[a._v("删除当前目录下没有被track过的文件和文件夹")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xf")]),a._v("\n")])])]),t("p",[a._v("删除当前目录下所有没有track过的文件. 不管他是否是.gitignore文件里面指定的文件夹和文件")]),a._v(" "),t("h2",{attrs:{id:"常见问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[a._v("#")]),a._v(" 常见问题")]),a._v(" "),t("h3",{attrs:{id:"_0-centos-系统-自带git不能用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_0-centos-系统-自带git不能用"}},[a._v("#")]),a._v(" 0. CentOS 系统，自带git不能用")]),a._v(" "),t("blockquote",[t("p",[a._v("error: The requested URL returned error: 400 Bad Request while accessing https://git.coding.net/linghuyong/youyiche.git/info/refsfatal: HTTP request failed")])]),a._v(" "),t("ul",[t("li",[a._v("编译安装2.4")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("→ yum "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" gcc-c++ gcc "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" openssl-devel openssl \n→ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" perl-Git\n→wget https://www.kernel.org/pub/software/scm/git/git-2.8.1.tar.gz\n→ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" xf git-2.8.1.tar.gz\n→ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" git-2.8.1\n→ ./configure "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--prefix")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/usr/local/git  --with-curl --with-expat\n→ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v("\n→ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n")])])]),t("ul",[t("li",[a._v("错误一：")])]),a._v(" "),t("blockquote",[t("p",[a._v("usr/bin/perl Makefile.PL PREFIX='/usr/local/git' INSTALL_BASE='' --localedir='/usr/local/git/share/locale'\n　　Can't locate ExtUtils/MakeMaker.pm in @INC (@INC contains: /usr/local/lib64/perl5 /usr/local/share/perl5 /usr/lib64/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib64/perl5 　　/usr/share/perl5 .) at Makefile.PL line 3.\n　　BEGIN failed--compilation aborted at Makefile.PL line 3.\n　　make[1]: *** [perl.mak] Error 2\n　　make: *** [perl/perl.mak] Error 2")])]),a._v(" "),t("p",[a._v("执行：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yum install perl-ExtUtils-MakeMaker package.\n")])])]),t("ul",[t("li",[a._v("出现错误二：")])]),a._v(" "),t("blockquote",[t("p",[a._v("/bin/sh: msgfmt: command not found")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" gettext-devel\n")])])]),t("ul",[t("li",[a._v("软连接,加入全局变量")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ln")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" /usr/local/git/bin/* /usr/bin/\n")])])]),t("ul",[t("li",[t("a",{attrs:{href:"http://blog.51cto.com/sandy521/1718236",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考地址"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.cnblogs.com/grimm/p/5368777.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考地址"),t("OutboundLink")],1)])]),a._v(" "),t("h3",{attrs:{id:"_1-fatal-refusing-to-merge-unrelated-histories"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-fatal-refusing-to-merge-unrelated-histories"}},[a._v("#")]),a._v(" 1."),t("code",[a._v("fatal：refusing to merge unrelated histories")])]),a._v(" "),t("ul",[t("li",[a._v("更新项目")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 告诉系统我允许合并不相关历史的内容。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull origin master --allow-unrelated-histories\n")])])]),t("ul",[t("li",[t("a",{attrs:{href:"https://www.cnblogs.com/lulubai/p/6001334.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考地址"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=r.exports}}]);