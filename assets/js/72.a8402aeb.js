(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{409:function(t,s,a){"use strict";a.r(s);var e=a(25),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"nginx配置location总结及rewrite规则写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx配置location总结及rewrite规则写法"}},[t._v("#")]),t._v(" nginx配置location总结及rewrite规则写法")]),t._v(" "),s("h3",{attrs:{id:"_1-location正则写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-location正则写法"}},[t._v("#")]),t._v(" 1. location正则写法")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v("  = /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 精确匹配 / ，主机名后面不能带任何字符串")]),t._v("\n  [ configuration A ]\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v("  /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 因为所有的地址都以 / 开头，所以这条规则将匹配到所有请求")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 但是正则和最长字符串会优先匹配")]),t._v("\n  [ configuration B ]\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /documents/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只有后面的正则表达式没有匹配到时，这一条才会采用这一条")]),t._v("\n  [ configuration C ]\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ /documents/Abc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配任何以 /documents/Abc 开头的地址，匹配符合以后，还要继续往下搜索")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只有后面的正则表达式没有匹配到时，这一条才会采用这一条")]),t._v("\n  [ configuration CC ]\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ^~ /images/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配任何以 /images/ 开头的地址，匹配符合以后，停止往下搜索正则，采用这一条。")]),t._v("\n  [ configuration D ]\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~* \\.(gif|jpg|jpeg)$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配所有以 gif,jpg或jpeg 结尾的请求")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 然而，所有请求 /images/ 下的图片会被 config D 处理，因为 ^~ 到达不了这一条正则")]),t._v("\n  [ configuration E ]\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /images/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 字符匹配到 /images/，继续往下，会发现 ^~ 存在")]),t._v("\n  [ configuration F ]\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /images/abc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最长字符匹配到 /images/abc，继续往下，会发现 ^~ 存在")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# F与G的放置顺序是没有关系的")]),t._v("\n  [ configuration G ]\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ /images/abc/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只有去掉 config D 才有效：先最长匹配 config G 开头的地址，继续往下搜索，匹配到这一条正则，采用")]),t._v("\n    [ configuration H ]\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nlocation ~* /js/.*/\\.js\n")])])]),s("ul",[s("li",[s("p",[t._v("已=开头表示精确匹配 (如 A 中只匹配根目录结尾的请求，后面不能带任何字符串。)")])]),t._v(" "),s("li",[s("p",[t._v("^~ 开头表示uri以某个常规字符串开头，不是正则匹配")])]),t._v(" "),s("li",[s("p",[t._v("~ 开头表示区分大小写的正则匹配;")])]),t._v(" "),s("li",[s("p",[t._v("~* 开头表示不区分大小写的正则匹配")])]),t._v(" "),s("li",[s("p",[t._v("/ 通用匹配, 如果没有其它匹配,任何请求都会匹配到")])])]),t._v(" "),s("p",[t._v("顺序 no 优先级：")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[t._v("    (location =) > (location 完整路径) > (location ^~ 路径) > (location ~,~* 正则顺序) > (location 部分起始路径) > (/)\n")])])]),s("blockquote",[s("p",[t._v("上面的匹配结果,按照上面的location写法，以下的匹配示例成立：")])]),t._v(" "),s("ul",[s("li",[t._v("/ -> config A"),s("br"),t._v("\n精确完全匹配，即使/index.html也匹配不了")]),t._v(" "),s("li",[t._v("/downloads/download.html -> config B"),s("br"),t._v("\n匹配B以后，往下没有任何匹配，采用B")]),t._v(" "),s("li",[t._v("/images/1.gif -> configuration D"),s("br"),t._v("\n匹配到F，往下匹配到D，停止往下")]),t._v(" "),s("li",[t._v("/images/abc/def -> config D"),s("br"),t._v("\n最长匹配到G，往下匹配D，停止往下\n你可以看到 任何以/images/开头的都会匹配到D并停止，FG写在这里是没有任何意义的，H是永远轮不到的，这里只是为了说明匹配顺序")]),t._v(" "),s("li",[t._v("/documents/document.html -> config C"),s("br"),t._v("\n匹配到C，往下没有任何匹配，采用C")]),t._v(" "),s("li",[t._v("/documents/1.jpg -> configuration E"),s("br"),t._v("\n匹配到C，往下正则匹配到E")]),t._v(" "),s("li",[t._v("/documents/Abc.jpg -> config CC"),s("br"),t._v("\n最长匹配到C，往下正则顺序匹配到CC，不会往下到E")])]),t._v(" "),s("h2",{attrs:{id:"实际使用建议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实际使用建议"}},[t._v("#")]),t._v(" 实际使用建议")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#所以实际使用中，个人觉得至少有三个匹配规则定义，如下：")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#直接匹配网站根，通过域名访问网站首页比较频繁，使用这个会加速处理，官网如是说。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这里是直接转发给后端应用服务器了，也可以是一个静态首页")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第一个必选规则")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        proxy_pass http://tomcat:8080/index\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第二个必选规则是处理静态文件请求，这是nginx作为http服务器的强项")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 有两种配置模式，目录匹配或后缀匹配,任选其一或搭配使用")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ^~ /static/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /webroot/static/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~* \\.(gif|jpg|jpeg|png|css|js|ico)$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /webroot/res/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#第三个规则就是通用规则，用来转发动态请求到后端应用服务器")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#非静态文件请求就默认是动态请求，自己根据实际把握")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#毕竟目前的一些框架的流行，带.php,.jsp后缀的情况很少了")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        proxy_pass http://tomcat:8080/\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"http://nginx.org/en/docs/http/ngx_http_rewrite_module.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://nginx.org/en/docs/http/ngx_http_rewrite_module.html"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"http://tengine.taobao.org/book/chapter_02.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://tengine.taobao.org/book/chapter_02.html"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"_2-rewrite规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-rewrite规则"}},[t._v("#")]),t._v(" 2. Rewrite规则")]),t._v(" "),s("p",[t._v("rewrite功能就是，使用nginx提供的全局变量或自己设置的变量，结合正则表达式和标志位实现url重写以及重定向。rewrite只能放在"),s("font",{attrs:{color:"#00cc00"}},[t._v("server{},location{},if{}")]),t._v("中，并且只能对域名后边的除去传递的参数外的字符串起作用，例如 http://seanlook.com/a/we/index.php?id=1&u=str 只对/a/we/index.php重写。语法rewrite regex replacement [flag];")],1),t._v(" "),s("p",[t._v("如果相对域名或参数字符串起作用，可以使用全局变量匹配，也可以使用proxy_pass反向代理。")]),t._v(" "),s("p",[t._v("表明看rewrite和location功能有点像，都能实现跳转，主要区别在于rewrite是在同一域名内更改获取资源的路径，而location是对一类路径做控制访问或反向代理，可以proxy_pass到其他机器。很多情况下rewrite也会写在location里，它们的执行顺序是：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1. 执行server块的rewrite指令\n2. 执行location匹配\n3. 执行选定的location中的rewrite指令\n")])])]),s("p",[t._v("如果其中某步URI被重写，则重新循环执行1-3，直到找到真实存在的文件；\n循环超过"),s("font",{attrs:{color:"red"}},[t._v("10")]),t._v("次，则返回 "),s("em",[t._v("500 Internal Server Error")]),t._v(" 错误。")],1),t._v(" "),s("h3",{attrs:{id:"_2-1-flag标志位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-flag标志位"}},[t._v("#")]),t._v(" 2.1 flag标志位")]),t._v(" "),s("ul",[s("li",[t._v("last : 相当于Apache的[L]标记，表示完成rewrite")]),t._v(" "),s("li",[t._v("break : 停止执行当前虚拟主机的后续rewrite指令集")]),t._v(" "),s("li",[t._v("redirect : 返回302临时重定向，地址栏会显示跳转后的地址")]),t._v(" "),s("li",[t._v("permanent : 返回301永久重定向，地址栏会显示跳转后的地址")])]),t._v(" "),s("p",[t._v("因为301和302不能简单的只返回状态码，还必须有重定向的URL，这就是return指令无法返回301,302的原因了。这里 last 和 break 区别有点难以理解：")]),t._v(" "),s("p",[t._v("last一般写在server和if中，而break一般使用在location中\nlast不终止重写后的url匹配，即新的url会再从server走一遍匹配流程，而break终止重写后的匹配\nbreak和last都能组织继续执行后面的rewrite指令")]),t._v(" "),s("h3",{attrs:{id:"_2-2-if指令与全局变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-if指令与全局变量"}},[t._v("#")]),t._v(" 2.2 if指令与全局变量")]),t._v(" "),s("blockquote",[s("p",[t._v("if判断指令")])]),t._v(" "),s("p",[t._v("语法为if(condition){...}，对给定的条件condition进行判断。\n如果为真，大括号内的rewrite指令将被执行，if条件(conditon)可以是如下任何内容：")]),t._v(" "),s("ul",[s("li",[t._v("当表达式只是一个变量时，如果值为空或任何以0开头的字符串都会当做false")]),t._v(" "),s("li",[t._v("直接比较变量和内容时，使用=或!=")]),t._v(" "),s("li",[t._v("~正则表达式匹配，~*不区分大小写的匹配，!~区分大小写的不匹配")])]),t._v(" "),s("p",[t._v("-f  和   !-f 用来判断是否存在文件"),s("br"),t._v("\n-d  和   !-d 用来判断是否存在目录"),s("br"),t._v("\n-e  和   !-e 用来判断是否存在文件或目录"),s("br"),t._v("\n-x  和   !-x 用来判断文件是否可执行")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_user_agent")]),t._v(" ~ MSIE)")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^(.*)$ /msie/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(' //如果UA包含"MSIE"，rewrite请求到/msid/目录下\n'),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_cookie")]),t._v(" ~* "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id=([^;]+)(?:;|$)"')]),t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" //如果cookie匹配正则，设置变量$id等于正则引用部分\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_method")]),t._v(" = POST)")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("405")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" //如果提交方法为POST，则返回状态405（Method "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" allowed）。return不能返回301,302\nif ("),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$slow")]),t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit_rate")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10k")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" //限速，$slow可以通过 "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" 指令设置\nif (!-f "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_filename")]),t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v("  http://127.0.0.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" //如果请求的文件名不存在，则反向代理到localhost 。这里的break也是停止rewrite检查\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$args")]),t._v(" ~ post=140)")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^ http://example.com/ permanent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" //如果query "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v('string中包含"post=140"，永久重定向到example.com')]),t._v("\nlocation ~* \\.(gif|jpg|png|swf|flv)$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("valid_referers")]),t._v(" none blocked www.jefflei.com www.leizhenfang.com")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$invalid_referer")]),t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" //防盗链\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("全局变量")])]),t._v(" "),s("p",[t._v("下面是可以用作if判断的全局变量")]),t._v(" "),s("ul",[s("li",[t._v("$args ： #这个变量等于请求行中的参数，同$query_string")]),t._v(" "),s("li",[t._v("$content_length ： 请求头中的Content-length字段。")]),t._v(" "),s("li",[t._v("$content_type ： 请求头中的Content-Type字段。")]),t._v(" "),s("li",[t._v("$document_root ： 当前请求在root指令中指定的值。")]),t._v(" "),s("li",[t._v("$host ： 请求主机头字段，否则为服务器名称。")]),t._v(" "),s("li",[t._v("$http_user_agent ： 客户端agent信息")]),t._v(" "),s("li",[t._v("$http_cookie ： 客户端cookie信息")]),t._v(" "),s("li",[t._v("$limit_rate ： 这个变量可以限制连接速率。")]),t._v(" "),s("li",[t._v("$request_method ： 客户端请求的动作，通常为GET或POST。")]),t._v(" "),s("li",[t._v("$remote_addr ： 客户端的IP地址。")]),t._v(" "),s("li",[t._v("$remote_port ： 客户端的端口。")]),t._v(" "),s("li",[t._v("$remote_user ： 已经经过Auth Basic Module验证的用户名。")]),t._v(" "),s("li",[t._v("$request_filename ： 当前请求的文件路径，由root或alias指令与URI请求生成。")]),t._v(" "),s("li",[t._v("$scheme ： HTTP方法（如http，https）。")]),t._v(" "),s("li",[t._v("$server_protocol ： 请求使用的协议，通常是HTTP/1.0或HTTP/1.1。")]),t._v(" "),s("li",[t._v("$server_addr ： 服务器地址，在完成一次系统调用后可以确定这个值。")]),t._v(" "),s("li",[t._v("$server_name ： 服务器名称。")]),t._v(" "),s("li",[t._v("$server_port ： 请求到达服务器的端口号。")]),t._v(" "),s("li",[t._v("$request_uri ： 包含请求参数的原始URI，不包含主机名，如：”/foo/bar.php?arg=baz”。")]),t._v(" "),s("li",[t._v("$uri ： 不带请求参数的当前URI，$uri不包含主机名，如”/foo/bar.html”。")]),t._v(" "),s("li",[t._v("$document_uri ： 与$uri相同。")])]),t._v(" "),s("blockquote",[s("p",[t._v("例：http://localhost:88/test1/test2/test.php")])]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[t._v("$host：localhost\n$server_port：88\n$request_uri：http://localhost:88/test1/test2/test.php\n$document_uri：/test1/test2/test.php\n$document_root：/var/www/html\n$request_filename：/var/www/html/test1/test2/test.php\n")])])]),s("h3",{attrs:{id:"_2-3-常用正则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-常用正则"}},[t._v("#")]),t._v(" 2.3 常用正则")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[t._v(". ： 匹配除换行符以外的任意字符\n? ： 重复0次或1次\n+ ： 重复1次或更多次\n* ： 重复0次或更多次\n\\d ：匹配数字\n^ ： 匹配字符串的开始\n$ ： 匹配字符串的介绍\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" ： 重复n次\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("n,"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" ： 重复n次或更多次\n[c] ： 匹配单个字符c\n[a-z] ： 匹配a-z小写字母的任意一个\n")])])]),s("p",[t._v("小括号()之间匹配的内容，可以在后面通过$1来引用，"),s("br"),t._v("\n$2表示的是前面第二个()里的内容。"),s("br"),t._v("\n正则里面容易让人困惑的是\\转义特殊字符。")]),t._v(" "),s("h3",{attrs:{id:"_2-4-rewrite实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-rewrite实例"}},[t._v("#")]),t._v(" 2.4 rewrite实例")]),t._v(" "),s("p",[t._v("例1：")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义image日志格式")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("log_format")]),t._v(" imagelog "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'["),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$time_local]")]),t._v(" '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$image_file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$image_type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$body_bytes_sent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$status")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启重写日志")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite_log")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /home/www")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重写规则信息")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_log")]),t._v(" logs/rewrite.log notice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意这里要用‘’单引号引起来，避免{}")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^/images/([a-z]{2})/([a-z0-9]{5})/(.*)\\.(png|jpg|gif)$'")]),t._v(" /data?file="),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$3")]),t._v("."),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$4")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意不能在上面这条规则后面加上“last”参数，否则下面的set指令不会执行")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$image_file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$3")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$image_type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$4")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /data")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定针对图片的日志格式，来分析图片类型和大小")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("access_log")]),t._v(" logs/images.log mian")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /data/images")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 应用前面定义的变量。判断首先文件在不在，不在再判断目录在不在，如果还不在就跳转到最后一个url里")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try_files")]),t._v(" /"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arg_file")]),t._v(" /image404.html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /image404.html")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 图片不存在返回特定的信息")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"image not found'),s("span",{pre:!0,attrs:{class:"token escape entity"}},[t._v("\\n")]),t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("对形如/images/ef/uh7b3/test.png的请求，重写到/data?file=test.png，于是匹配到location /data，先看/data/images/test.png文件存不存在，如果存在则正常响应，如果不存在则重写tryfiles到新的image404 location，直接返回404状态码。")]),t._v(" "),s("blockquote",[s("p",[t._v("例2：")])]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[t._v("\t\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^/images/(.*)_(\\d+)x(\\d+)\\.(png|jpg|gif)$ /resizer/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("."),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$4")]),t._v("?width="),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v("&height="),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$3")]),t._v("? last")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("对形如/images/bla_500x400.jpg的文件请求，重写到/resizer/bla.jpg?width=500&height=400地址，并会继续尝试匹配location。")]),t._v(" "),s("blockquote",[s("p",[t._v("链接：")])]),t._v(" "),s("p",[s("a",{attrs:{href:"http://www.nginx.cn/216.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.nginx.cn/216.html"),s("OutboundLink")],1),s("br"),t._v(" "),s("a",{attrs:{href:"http://www.ttlsa.com/nginx/nginx-rewriting-rules-guide/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.ttlsa.com/nginx/nginx-rewriting-rules-guide/"),s("OutboundLink")],1),s("br"),t._v(" "),s("a",{attrs:{href:"http://fantefei.blog.51cto.com/2229719/919431",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://fantefei.blog.51cto.com/2229719/919431"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);